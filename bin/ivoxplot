#!/usr/bin/python
# Written by Willem Onderwaater and Sander Roobol as part of a collaboration
# between the ID03 beamline at the European Synchrotron Radiation Facility and
# the Interface Physics group at Leiden University.

import sys
import os
import argparse
import numbers
import numpy
import matplotlib.pyplot as pyplot
import matplotlib.colors

import ivoxoar.space, ivoxoar.plot


if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog='ivoxplot')
    parser.add_argument('infile')
    parser.add_argument('-s', '--savepdf', action='store_true')
    parser.add_argument('-c', '--clip', default = 0.00)
    parser.add_argument('-p', '--project', action='append', default=[])
    parser.add_argument('--nolog', action='store_true')
    parser.add_argument('--slice', nargs=2, action='append', default=[])
    parser.add_argument('--savefile')
    parser.add_argument('--subtract')
    
    args = parser.parse_args()

    space = ivoxoar.space.Space.fromfile(args.infile)
    if args.subtract:
        diffspace = ivoxoar.space.Space.fromfile(args.subtract)
        space -= diffspace
        del diffspace
        args.nolog = True

    info = ''

    # SLICING
    for sl in args.slice:
        ax, key = sl
        axindex = space.get_axindex_by_label(ax)
        axlabel = space.axes[axindex].label
        if ':' in key:
            start, stop = key.split(':')
            if start:
                start = float(start.replace('m', '-'))
            else:
                start = space.axes[axindex].min
            if stop:
                stop = float(stop.replace('m', '-'))
            else:
                stop = space.axes[axindex].max
            key = slice(start, stop)

            info += ' sliced in {0} from {1} to {2}'.format(axlabel, start, stop)
        else:
            key = float(key.replace('m', '-'))
            info += ' sliced in {0} at {1}'.format(axlabel, key)
        olddim = space.dimension
        space = space.slice(axindex, key)
        if space.dimension == olddim:
            space = space.project(axindex)


    # PROJECTION
    for proj in args.project:
        projectaxis = space.get_axindex_by_label(proj)
        info += ' projected on {0}'.format(space.axes[projectaxis].label)
        space = space.project(projectaxis)

    if space.dimension == 3: # automatic projection on smallest axis
        projectaxis = numpy.argmin(space.photons.shape)
        info += ' projected on {0}'.format(space.axes[projectaxis].label)
        space = space.project(projectaxis)

    # PLOTTING
    pyplot.figure(figsize=(12,9))
    ivoxoar.plot.plot(space, pyplot.gcf(), pyplot.gca(), log=not args.nolog, clipping=float(args.clip))
    pyplot.suptitle('{0}{1}'.format(os.path.splitext(args.infile)[0], info))
    
    if args.savepdf or args.savefile:
        if args.savefile:
            pyplot.savefig(args.savefile)
            print 'saved at {0}'.format(args.savefile)
        else:
            pyplot.savefig('{0}.pdf'.format(os.path.splitext(args.infile)[0]))
            print 'saved at {0}.pdf'.format(os.path.splitext(args.infile)[0])
    else:
        pyplot.show()
